constants.responseCode.notFound,error:{code:"NoResults",reason:"not valid response was provided."}})},function(t){E.filesUtilityService.clearCache(E.filesUtilityService.getCacheContext(e)),E.$ocLazyLoad.load(E.constants.files.lazyLoadFiles,E.constants.scenarios.files.lazyLoadServices).then(function(){E.$injector.get(E.constants.files.lazyFileService.filesErrorHandler).handleSystemError(t.response,t.status,e),i.reject(t.response)}).catch(function(){E.loggingService.error("Failed to lazy load files services")})})},function(e){i.reject({status:-1,error:{code:"BadRequest",reason:"url could not be resolved."}})}),i.promise},E.ensureSiteUrlIsSet=function(e){void 0!==e.value&&void 0!==e.value.forEach&&e.value.forEach(function(e,t){e.siteUrl||(e.siteUrl=E.filesUtilityService.extractSiteUrl(e.objectUrl).slice(0,-1))})},E.removeItem=function(e){if(e.serviceName==E.constants.files.serviceName.email)return E.$q.reject();var t=E.$q.defer(),i=function(i){t.resolve(i),E.filesUtilityService.clearCache(E.filesUtilityService.getCacheContext(e))};return E.filesURLResolver.resolveURL(teamspace.services.FileMethod.DELETE,e.serviceName,e,null).then(function(n){E.filesDataManager.delete(e.id,E.filesUtilityService.getRequestOptions(n,E.constants.counter